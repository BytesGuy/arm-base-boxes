name: Lint and Build Base Boxes

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'ubuntu-server-*/vmware-*.pkr.hcl'
      - 'debian-11/vmware-*.pkr.hcl'
      - '**/http/**'
      - 'scripts/**'
  workflow_dispatch:
    inputs:
      distribution:
        description: 'Distribution to build (all, ubuntu-20.04, ubuntu-22.04, ubuntu-24.04, debian-11)'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - ubuntu-20.04
          - ubuntu-22.04
          - ubuntu-24.04
          - debian-11

# Prevent concurrent builds of the same PR/branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  determine-builds:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - uses: actions/checkout@v4
    - id: set-matrix
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          if [[ "${{ github.event.inputs.distribution }}" == "all" ]]; then
            echo "matrix={\"distro\":[\"ubuntu-20.04\",\"ubuntu-22.04\",\"ubuntu-24.04\",\"debian-11\"]}" >> $GITHUB_OUTPUT
          else
            echo "matrix={\"distro\":[\"${{ github.event.inputs.distribution }}\"]}" >> $GITHUB_OUTPUT
          fi
        else
          # For PR, determine which distributions were modified
          MODIFIED_DISTROS=()
          git fetch origin ${{ github.base_ref }}
          
          if git diff --name-only origin/${{ github.base_ref }} HEAD | grep -q "ubuntu-server-20.04/"; then
            MODIFIED_DISTROS+=("ubuntu-20.04")
          fi
          if git diff --name-only origin/${{ github.base_ref }} HEAD | grep -q "ubuntu-server-22.04/"; then
            MODIFIED_DISTROS+=("ubuntu-22.04")
          fi
          if git diff --name-only origin/${{ github.base_ref }} HEAD | grep -q "ubuntu-server-24.04/"; then
            MODIFIED_DISTROS+=("ubuntu-24.04")
          fi
          if git diff --name-only origin/${{ github.base_ref }} HEAD | grep -q "debian-11/"; then
            MODIFIED_DISTROS+=("debian-11")
          fi
          
          # If scripts changed, build all
          if git diff --name-only origin/${{ github.base_ref }} HEAD | grep -q "^scripts/"; then
            MODIFIED_DISTROS=("ubuntu-20.04" "ubuntu-22.04" "ubuntu-24.04" "debian-11")
          fi
          
          JSON_ARRAY=$(printf '%s\n' "${MODIFIED_DISTROS[@]}" | jq -R . | jq -s .)
          echo "matrix={\"distro\":$JSON_ARRAY}" >> $GITHUB_OUTPUT
        fi

  lint:
    needs: determine-builds
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Packer
      run: |
        curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
        sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
        sudo apt-get update && sudo apt-get install packer

    - name: Lint Templates
      run: |
        # Only lint templates that will be built
        MATRIX='${{ needs.determine-builds.outputs.matrix }}'
        DISTROS=$(echo $MATRIX | jq -r '.distro[]')
        
        for distro in $DISTROS; do
          case $distro in
            "ubuntu-20.04")
              cd ubuntu-server-20.04
              packer init vmware-focal.pkr.hcl
              packer validate vmware-focal.pkr.hcl
              cd ..
              ;;
            "ubuntu-22.04")
              cd ubuntu-server-22.04
              packer init vmware-jammy.pkr.hcl
              packer validate vmware-jammy.pkr.hcl
              cd ..
              ;;
            "ubuntu-24.04")
              cd ubuntu-server-24.04
              packer init vmware-noble.pkr.hcl
              packer validate vmware-noble.pkr.hcl
              cd ..
              ;;
            "debian-11")
              cd debian-11
              packer init vmware-bullseye.pkr.hcl
              packer validate vmware-bullseye.pkr.hcl
              cd ..
              ;;
          esac
        done

  build:
    needs: [determine-builds, lint]
    runs-on: macos-latest
    strategy:
      matrix: ${{fromJson(needs.determine-builds.outputs.matrix)}}
      fail-fast: false
    steps:
    - uses: actions/checkout@v4

    - name: Install VMware Fusion
      run: |
        brew install --cask vmware-fusion

    - name: Install Packer
      run: |
        brew tap hashicorp/tap
        brew install hashicorp/tap/packer

    - name: Map Distribution to Folder and Template
      id: map
      run: |
        case ${{ matrix.distro }} in
          "ubuntu-20.04")
            echo "folder=ubuntu-server-20.04" >> $GITHUB_OUTPUT
            echo "template=vmware-focal.pkr.hcl" >> $GITHUB_OUTPUT
            ;;
          "ubuntu-22.04")
            echo "folder=ubuntu-server-22.04" >> $GITHUB_OUTPUT
            echo "template=vmware-jammy.pkr.hcl" >> $GITHUB_OUTPUT
            ;;
          "ubuntu-24.04")
            echo "folder=ubuntu-server-24.04" >> $GITHUB_OUTPUT
            echo "template=vmware-noble.pkr.hcl" >> $GITHUB_OUTPUT
            ;;
          "debian-11")
            echo "folder=debian-11" >> $GITHUB_OUTPUT
            echo "template=vmware-bullseye.pkr.hcl" >> $GITHUB_OUTPUT
            ;;
        esac

    - name: Initialize Packer
      working-directory: ${{ steps.map.outputs.folder }}
      run: packer init ${{ steps.map.outputs.template }}

    - name: Build Box
      working-directory: ${{ steps.map.outputs.folder }}
      run: |
        mkdir -p output
        packer build -force ${{ steps.map.outputs.template }}

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.distro }}-arm64
        path: ${{ steps.map.outputs.folder }}/output/
